swagger: '2.0'
info:
  version: "1.0"
  title: Uvch.cz API
  description: |
    Full description of current API version supported on uvch.cz and other related websites
# host: www.e-croatia.com
# basePath: /api/v1
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
    description: |
      **It is not supported yet**, but will be implemented before going to public. For now, you can provide any combination of username / password. Even though the system does not even check whether the header is present, it's good idea to implement it so the system will not break when the support for Basic HTTP Authorization is added.
tags:
  - name: Client
    description: Everything related to client
  - name: Location
    description: All calls which are dealing with the location (region, city etc)
paths:
  /clients:
    get:
      summary: Retrieve the list of clients
      description: |
        Returns list of active clients. For each one of them system provides basic information which should be enough to show client's main profile card.
        The result can be affected by using optional parameters.
        System does not return all valid results, but supports pagination.
      security:
        - Basic: []
      tags:
        - Client
      parameters:
        - name: region
          description: code of the region (eg. dubrovnik) we want clients from
          in: query
          type: string
        - name: city
          description: code of the city (eg. medulin) we want clients from
          in: query
          type: string
        - name: page
          description: Number of the page we want to see results for
          in: query
          type: integer
          format: int32
        - name: records
          description: How many records we would like to recieve on one page
          in: query
          type: integer
          format: int32
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              pagination:
                $ref: '#/definitions/Pagination'
              clients:
                type: array
                items:
                  $ref: '#/definitions/Client'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Runtime error
          schema:
            $ref: '#/definitions/Error'
  /clients/{client_id}:
    get:
      summary: Retrieve information about certain client
      description: |
        Returns more information about the client. The basic information set can get extended by using fields parameter.
      security:
        - Basic: []
      tags:
        - Client
      parameters:
        - name: client_id
          description: Id of the client we want a profile for
          in: path
          type: integer
          format: int32
          required: true
        - name: fields
          description: List of optional information you would like to recieve
          in: query
          type: string
          collectionFormat: csv
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ClientProfile'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Runtime error
          schema:
            $ref: '#/definitions/Error'
  /clients/{client_id}/photos:
    get:
      summary: Retrieve list of client's photos
      description: |
        Returns list of the photos the client has added for his main profile.
      security:
        - Basic: []
      tags:
        - Client
      parameters:
        - name: client_id
          description: Id of the client we want photos for
          in: path
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              url:
                type: string
              photos: 
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Runtime error
          schema:
            $ref: '#/definitions/Error'
  /clients/{client_id}/units:
    get:
      summary: Retrieve list of client's accommodation units
      description: |
        Returns list of accommodation units which client has. API provides basic information about each of such accommodation unit.
      security:
        - Basic: []
      tags:
        - Client
      parameters:
        - name: client_id
          description: Id of the client we want accommodation units for
          in: path
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/AccommodationUnit'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Runtime error
          schema:
            $ref: '#/definitions/Error'
  /regions:
    get:
      summary: Retrieve the list of regions
      description: |
        Returns list of current supported regions with basic information 
        about each one of them.
      security:
        - Basic: []
      tags:
        - Location
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Region'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Runtime error
          schema:
            $ref: '#/definitions/Error'
  /regions/{region_id}:
    get:
      summary: Retrieve information about the region
      description: |
        Returns more information about the region itself. Also provides useful links where to go from here.
      security:
        - Basic: []
      tags:
        - Location
      parameters:
        - name: region_id
          in: path
          description: ID of the region
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Region'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Runtime error
          schema:
            $ref: '#/definitions/Error'
  /regions/{region_id}/cities:
    get:
      summary: Retrieve the list of cities within the region
      description: |
        Returns list of cities within selected region. Each city contain basic information about itself and list of links to retrieve more inforamtation about each one.
      security:
        - Basic: []
      tags:
        - Location
      parameters:
        - name: region_id
          in: path
          description: ID of the region
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/City'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Runtime error
          schema:
            $ref: '#/definitions/Error'
  /regions/{region_id}/cities/{city_id}:
    get:
      summary: Retrieve information about the city
      description: |
        Returns more detailed information about the city. 
        The requirements are that the city belongs to the region.
      security:
        - Basic: []
      tags:
        - Location
      parameters:
        - name: region_id
          in: path
          description: ID of the region
          type: integer
          format: int32
          required: true
        - name: city_id
          in: path
          description: ID of the city
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/CityProfile'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Runtime error
          schema:
            $ref: '#/definitions/Error'          
definitions:
  AccommodationUnit:
    type: object
    properties:
      id: 
        type: integer
        format: int32
      name:
        type: string
      type: 
        type: string
      regular_bed: 
        type: integer
        format: int32
      extra_bed: 
        type: integer
        format: int32
      unit_size: 
        type: integer
        format: int32
      bedrooms: 
        type: integer
        format: int32
      links:
        type: array
        items:
          $ref: '#/definitions/HateoasLink' 
  City:
    type: object
    properties:
      id: 
        type: integer
        format: int32
      code: 
        type: string
      name:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/HateoasLink' 
  CityProfile:
    type: object
    properties:
      id: 
        type: integer
        format: int32
      code: 
        type: string
      name:
        type: string
      forecast:
        $ref: '#/definitions/Forecast'
      links:
        type: array
        items:
          $ref: '#/definitions/HateoasLink' 
  Client:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      city:
        type: string
      region:
        type: string
      sea:
        type: integer
        format: int32
      center:
        type: integer
        format: int32
      links:
        type: array
        items:
          $ref: '#/definitions/HateoasLink' 
  ClientProfile:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      fax:
        type: string
      mobile:
        type: string
      phone:
        type: string
      address:
        type: object
        description: only when address is listed in fields params
        properties:
          address:
            type: string
          city:
            type: string
          region:
            type: string
          district:
            type: string
      languages:
        type: array
        description: only when languages is listed in fields params
        items:
          type: object
          properties:
            id:
              type: integer
              format: int32
            code:
              type: string
      links:
        type: array
        items:
          $ref: '#/definitions/HateoasLink' 
  Forecast:
    type: object
    properties:
      update:
        type: string
        format: date-time
      sunrise:
        type: string
        format: date-time
      sunset:
        type: string
        format: date-time
      temperature:
        type: integer
        format: int32
      temperature_unit:
        type: string
      temperature_code:
        type: string
      temperature_name:
        type: string
      wind_direction:
        type: number
        format: float
      wind_direction_code:
        type: string
      wind_speed:
        type: number
        format: float
      wind_speed_name:
        type: string
      pressure:
        type: number
        format: float
      pressure_unit:
        type: string
  HateoasLink:
    type: object
    properties:
      href:
        type: string
  Pagination:
    type: object
    properties:
      total:
        type: integer
        format: int32
      per_page:
        type: integer
        format: int32
      pages:
        type: integer
        format: int32
      page:
        type: integer
        format: int32
      is_first:
        type: integer
        format: int32
      is_last:
        type: integer
        format: int32
      has_next:
        type: integer
        format: int32
      has_previous:
        type: integer
        format: int32
      page_start:
        type: integer
        format: int32
      page_end:
        type: integer
        format: int32
  Region:
    type: object
    properties:
      id: 
        type: integer
        format: int32
      code: 
        type: string
      name:
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/HateoasLink'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /pavlatka/Uvch.cz/1.0
schemes:
 - https